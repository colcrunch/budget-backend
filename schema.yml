openapi: 3.0.3
info:
  title: '{SERVICE_NAME} API'
  version: 1.0.0
  description: Your project description
paths:
  /api/auth/token/obtain/:
    post:
      operationId: auth_token_obtain_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/auth/token/refresh/:
    post:
      operationId: auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/user/:
    post:
      operationId: auth_user_create
      description: |-
        API Endpoint to register users.
        METHODS: POST
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/user/{user_id}/:
    get:
      operationId: auth_user_retrieve
      description: |-
        API Endpoint to get the details for a user.
        METHODS: GET
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/user/me/:
    get:
      operationId: auth_user_me_retrieve
      description: |-
        API Endpoint to get the details for a user.
        METHODS: GET
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "JWT"
